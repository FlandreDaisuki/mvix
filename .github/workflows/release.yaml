name: Release

on:
  release:
    types: [published]

jobs:
  check-version:
    name: üßê Check version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - id: package-json-version
        env:
          NPM_CONFIG_UPDATE_NOTIFIER: false
        run: |
          PACKAGE_JSON_VERSION="$(jq -r .version package.json)"
          NPM_REMOTE_VERSION="$(npm show mvix version)"

          # exit 1 if no valid versions matched
          npx --yes --quiet semver -r ">${NPM_REMOTE_VERSION}" "${PACKAGE_JSON_VERSION}"

  deploy-to-npm:
    name: üì¶ Deploy to npm
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Setup pnpm
        id: setup-pnpm
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> "${GITHUB_OUTPUT}"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install

      - run: pnpm run test

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}

  build-and-push-image:
    name: üê≥ Build image & deploy to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [check-version, deploy-to-npm]
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        # aka docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        # aka docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        # aka docker/build-push-action@3.1.1
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
